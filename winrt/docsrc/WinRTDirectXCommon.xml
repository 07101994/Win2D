<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Microsoft.Graphics.Canvas</name>
  </assembly>
  <members>

    <member name="T:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat">
      <summary>Specifies the pixel format of a DirectX surface.</summary>
      <remarks>This Windows Runtime type corresponds to the DirectX <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb173059">DXGI_FORMAT</a> enum.</remarks>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.Unknown">
      <summary>The format is not known.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32G32B32A32Typeless">
      <summary>A four-component, 128-bit typeless format that supports 32 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32G32B32A32Float">
      <summary>A four-component, 128-bit floating-point format that supports 32 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32G32B32A32UInt">
      <summary>A four-component, 128-bit unsigned-integer format that supports 32 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32G32B32A32Int">
      <summary>A four-component, 128-bit signed-integer format that supports 32 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32G32B32Typeless">
      <summary>A three-component, 96-bit typeless format that supports 32 bits per color channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32G32B32Float">
      <summary>A three-component, 96-bit floating-point format that supports 32 bits per color channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32G32B32UInt">
      <summary>A three-component, 96-bit unsigned-integer format that supports 32 bits per color channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32G32B32Int">
      <summary>A three-component, 96-bit signed-integer format that supports 32 bits per color channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16G16B16A16Typeless">
      <summary>A four-component, 64-bit typeless format that supports 16 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16G16B16A16Float">
      <summary>A four-component, 64-bit floating-point format that supports 16 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16G16B16A16UIntNormalized">
      <summary>A four-component, 64-bit unsigned-normalized-integer format that supports 16 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16G16B16A16UInt">
      <summary>A four-component, 64-bit unsigned-integer format that supports 16 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16G16B16A16IntNormalized">
      <summary>A four-component, 64-bit signed-normalized-integer format that supports 16 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16G16B16A16Int">
      <summary>A four-component, 64-bit signed-integer format that supports 16 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32G32Typeless">
      <summary>A two-component, 64-bit typeless format that supports 32 bits for the red channel and 32 bits for the green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32G32Float">
      <summary>A two-component, 64-bit floating-point format that supports 32 bits for the red channel and 32 bits for the green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32G32UInt">
      <summary>A two-component, 64-bit unsigned-integer format that supports 32 bits for the red channel and 32 bits for the green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32G32Int">
      <summary>A two-component, 64-bit signed-integer format that supports 32 bits for the red channel and 32 bits for the green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32G8X24Typeless">
      <summary>A two-component, 64-bit typeless format that supports 32 bits for the red channel, 8 bits for the green channel, and 24 bits are unused.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.D32FloatS8X24UInt">
      <summary>A 32-bit floating-point component, and two unsigned-integer components (with an additional 32 bits). This format supports 32-bit depth, 8-bit stencil, and 24 bits are unused.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32FloatX8X24Typeless">
      <summary>A 32-bit floating-point component, and two typeless components (with an additional 32 bits). This format supports 32-bit red channel, 8 bits are unused, and 24 bits are unused.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.X32TypelessG8X24UInt">
      <summary>A 32-bit typeless component, and two unsigned-integer components (with an additional 32 bits). This format has 32 bits unused, 8 bits for green channel, and 24 bits are unused.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R10G10B10A2Typeless">
      <summary>A four-component, 32-bit typeless format that supports 10 bits for each color and 2 bits for alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R10G10B10A2UIntNormalized">
      <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 10 bits for each color and 2 bits for alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R10G10B10A2UInt">
      <summary>A four-component, 32-bit unsigned-integer format that supports 10 bits for each color and 2 bits for alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R11G11B10Float">
      <summary>Three partial-precision floating-point numbers encoded into a single 32-bit value (a variant of s10e5, which is sign bit, 10-bit mantissa, and 5-bit biased (15) exponent). There are no sign bits, and there is a 5-bit biased (15) exponent for each channel, 6-bit mantissa for R and G, and a 5-bit mantissa for B.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8G8B8A8Typeless">
      <summary>A four-component, 32-bit typeless format that supports 8 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8G8B8A8UIntNormalized">
      <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 8 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8G8B8A8UIntNormalizedSrgb">
      <summary>A four-component, 32-bit unsigned-normalized integer sRGB format that supports 8 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8G8B8A8UInt">
      <summary>A four-component, 32-bit unsigned-integer format that supports 8 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8G8B8A8IntNormalized">
      <summary>A four-component, 32-bit signed-normalized-integer format that supports 8 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8G8B8A8Int">
      <summary>A four-component, 32-bit signed-integer format that supports 8 bits per channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16G16Typeless">
      <summary>A two-component, 32-bit typeless format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16G16Float">
      <summary>A two-component, 32-bit floating-point format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16G16UIntNormalized">
      <summary>A two-component, 32-bit unsigned-normalized-integer format that supports 16 bits each for the green and red channels.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16G16UInt">
      <summary>A two-component, 32-bit unsigned-integer format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16G16IntNormalized">
      <summary>A two-component, 32-bit signed-normalized-integer format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16G16Int">
      <summary>A two-component, 32-bit signed-integer format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32Typeless">
      <summary>A single-component, 32-bit typeless format that supports 32 bits for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.D32Float">
      <summary>A single-component, 32-bit floating-point format that supports 32 bits for depth.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32Float">
      <summary>A single-component, 32-bit floating-point format that supports 32 bits for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32UInt">
      <summary>A single-component, 32-bit unsigned-integer format that supports 32 bits for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R32Int">
      <summary>A single-component, 32-bit signed-integer format that supports 32 bits for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R24G8Typeless">
      <summary>A two-component, 32-bit typeless format that supports 24 bits for the red channel and 8 bits for the green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.D24UIntNormalizedS8UInt">
      <summary>A 32-bit z-buffer format that supports 24 bits for depth and 8 bits for stencil.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R24UIntNormalizedX8Typeless">
      <summary>A 32-bit format, that contains a 24 bit, single-component, unsigned-normalized integer, with an additional typeless 8 bits. This format has 24 bits red channel and 8 bits unused.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.X24TypelessG8UInt">
      <summary>A 32-bit format, that contains a 24 bit, single-component, typeless format, with an additional 8 bit unsigned integer component. This format has 24 bits unused and 8 bits green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8G8Typeless">
      <summary>A two-component, 16-bit typeless format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8G8UIntNormalized">
      <summary>A two-component, 16-bit unsigned-normalized-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8G8UInt">
      <summary>A two-component, 16-bit unsigned-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8G8IntNormalized">
      <summary>A two-component, 16-bit signed-normalized-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8G8Int">
      <summary>A two-component, 16-bit signed-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16Typeless">
      <summary>A single-component, 16-bit typeless format that supports 16 bits for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16Float">
      <summary>A single-component, 16-bit floating-point format that supports 16 bits for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.D16UIntNormalized">
      <summary>A single-component, 16-bit unsigned-normalized-integer format that supports 16 bits for depth.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16UIntNormalized">
      <summary>A single-component, 16-bit unsigned-normalized-integer format that supports 16 bits for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16UInt">
      <summary>A single-component, 16-bit unsigned-integer format that supports 16 bits for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16IntNormalized">
      <summary>A single-component, 16-bit signed-normalized-integer format that supports 16 bits for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R16Int">
      <summary>A single-component, 16-bit signed-integer format that supports 16 bits for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8Typeless">
      <summary>A single-component, 8-bit typeless format that supports 8 bits for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8UIntNormalized">
      <summary>A single-component, 8-bit unsigned-normalized-integer format that supports 8 bits for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8UInt">
      <summary>A single-component, 8-bit unsigned-integer format that supports 8 bits for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8IntNormalized">
      <summary>A single-component, 8-bit signed-normalized-integer format that supports 8 bits for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8Int">
      <summary>A single-component, 8-bit signed-integer format that supports 8 bits for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.A8UIntNormalized">
      <summary>A single-component, 8-bit unsigned-normalized-integer format for alpha only.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R1UIntNormalized">
      <summary>A single-component, 1-bit unsigned-normalized integer format that supports 1 bit for the red channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R9G9B9E5SharedExponent">
      <summary>Three partial-precision floating-point numbers encoded into a single 32-bit value all sharing the same 5-bit exponent (variant of s10e5, which is sign bit, 10-bit mantissa, and 5-bit biased (15) exponent). There is no sign bit, and there is a shared 5-bit biased (15) exponent and a 9-bit mantissa for each channel.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R8G8B8G8UIntNormalized">
      <summary>A four-component, 32-bit unsigned-normalized-integer format. This packed RGB format is analogous to the UYVY format. Each 32-bit block describes a pair of pixels: (R8, G8, B8) and (R8, G8, B8) where the R8/B8 values are repeated, and the G8 values are unique to each pixel. Width must be even.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.G8R8G8B8UIntNormalized">
      <summary>A four-component, 32-bit unsigned-normalized-integer format. This packed RGB format is analogous to the YUY2 format. Each 32-bit block describes a pair of pixels: (R8, G8, B8) and (R8, G8, B8) where the R8/B8 values are repeated, and the G8 values are unique to each pixel. Width must be even.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC1Typeless">
      <summary>Four-component typeless block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC1UIntNormalized">
      <summary>Four-component block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC1UIntNormalizedSrgb">
      <summary>Four-component block-compression format for sRGB data.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC2Typeless">
      <summary>Four-component typeless block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC2UIntNormalized">
      <summary>Four-component block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC2UIntNormalizedSrgb">
      <summary>Four-component block-compression format for sRGB data.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC3Typeless">
      <summary>Four-component typeless block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC3UIntNormalized">
      <summary>Four-component block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC3UIntNormalizedSrgb">
      <summary>Four-component block-compression format for sRGB data.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC4Typeless">
      <summary>One-component typeless block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC4UIntNormalized">
      <summary>One-component block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC4IntNormalized">
      <summary>One-component block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC5Typeless">
      <summary>Two-component typeless block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC5UIntNormalized">
      <summary>Two-component block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC5IntNormalized">
      <summary>Two-component block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.B5G6R5UIntNormalized">
      <summary>A three-component, 16-bit unsigned-normalized-integer format that supports 5 bits for blue, 6 bits for green, and 5 bits for red.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.B5G5R5A1UIntNormalized">
      <summary>A four-component, 16-bit unsigned-normalized-integer format that supports 5 bits for each color channel and 1-bit alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.B8G8R8A8UIntNormalized">
      <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 8 bits for each color channel and 8-bit alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.B8G8R8X8UIntNormalized">
      <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 8 bits for each color channel and 8 bits unused.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.R10G10B10XRBiasA2UIntNormalized">
      <summary>A four-component, 32-bit 2.8-biased fixed-point format that supports 10 bits for each color channel and 2-bit alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.B8G8R8A8Typeless">
      <summary>A four-component, 32-bit typeless format that supports 8 bits for each channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.B8G8R8A8UIntNormalizedSrgb">
      <summary>A four-component, 32-bit unsigned-normalized standard RGB format that supports 8 bits for each channel including alpha.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.B8G8R8X8Typeless">
      <summary>A four-component, 32-bit typeless format that supports 8 bits for each color channel, and 8 bits are unused.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.B8G8R8X8UIntNormalizedSrgb">
      <summary>A four-component, 32-bit unsigned-normalized standard RGB format that supports 8 bits for each color channel, and 8 bits are unused.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC6HTypeless">
      <summary>A typeless block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC6H16UnsignedFloat">
      <summary>A block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC6H16Float">
      <summary>A block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC7Typeless">
      <summary>A typeless block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC7UIntNormalized">
      <summary>A block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.BC7UIntNormalizedSrgb">
      <summary>A block-compression format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.Ayuv">
      <summary>Most common YUV 4:4:4 video resource format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.Y410">
      <summary>10-bit per channel packed YUV 4:4:4 video resource format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.Y416">
      <summary>16-bit per channel packed YUV 4:4:4 video resource format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.NV12">
      <summary>Most common YUV 4:2:0 video resource format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.P010">
      <summary>10-bit per channel planar YUV 4:2:0 video resource format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.P016">
      <summary>16-bit per channel planar YUV 4:2:0 video resource format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.Opaque420">
      <summary>8-bit per channel planar YUV 4:2:0 video resource format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.Yuy2">
      <summary>Most common YUV 4:2:2 video resource format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.Y210">
      <summary>10-bit per channel packed YUV 4:2:2 video resource format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.Y216">
      <summary>16-bit per channel packed YUV 4:2:2 video resource format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.NV11">
      <summary>Most common planar YUV 4:1:1 video resource format.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.AI44">
      <summary>4-bit palletized YUV format that is commonly used for DVD subpicture.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.IA44">
      <summary>4-bit palletized YUV format that is commonly used for DVD subpicture.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.P8">
      <summary>8-bit palletized format that is used for palletized RGB data when the processor processes ISDB-T data and for palletized YUV data when the processor processes BluRay data.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.A8P8">
      <summary>8-bit palletized format with 8 bits of alpha that is used for palletized YUV data when the processor processes BluRay data.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.DirectX.DirectXPixelFormat.B4G4R4A4UIntNormalized">
      <summary>A four-component, 16-bit unsigned-normalized integer format that supports 4 bits for each channel including alpha.</summary>
    </member>

  </members>
</doc>
