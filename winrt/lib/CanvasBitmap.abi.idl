// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may
// not use these files except in compliance with the License. You may obtain
// a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.

namespace Microsoft.Graphics.Canvas
{
    //
    // ICanvasBitmap
    //
    runtimeclass CanvasBitmap;
    runtimeclass CanvasDevice;

    [version(VERSION), uuid(C57532ED-709E-4AC2-86BE-A1EC3A7FA8FE), exclusiveto(CanvasBitmap)]
    interface ICanvasBitmap : IInspectable
        requires ICanvasImage
    {
        [propget]
        HRESULT SizeInPixels([out, retval] Windows.Foundation.Size* size);

        [propget]
        HRESULT SizeInDips([out, retval] Windows.Foundation.Size* size);
    };

    [version(VERSION), uuid(620DFDBB-9D08-406C-BFE6-D9B81E6DF8E7), exclusiveto(CanvasBitmap)]
    interface ICanvasBitmapFactory : IInspectable
    {
    };

    [version(VERSION), uuid(C8948DEA-A41D-4CC2-AF9A-FDDE01B606DC), exclusiveto(CanvasBitmap)]
    interface ICanvasBitmapStatics : IInspectable
    {
        // TODO #2053: add load from URL functionality
        HRESULT LoadAsync(
            [in] ICanvasResourceCreator* resourceCreator,
            [in] HSTRING fileName,
            [out, retval] Windows.Foundation.IAsyncOperation<CanvasBitmap*>** canvasBitmap);
    };

    [version(VERSION), activatable(ICanvasBitmapFactory, VERSION), static(ICanvasBitmapStatics, VERSION)]
    runtimeclass CanvasBitmap
    {
        [default] interface ICanvasBitmap;
    }
}
