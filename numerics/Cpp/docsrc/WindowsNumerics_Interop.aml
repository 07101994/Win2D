<?xml version="1.0"?>
<!--
Copyright (c) Microsoft Corporation. All rights reserved.

Licensed under the MIT License. See LICENSE.txt in the project root for license information.
-->

<topic id="WindowsNumerics_Interop" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>
        These functions convert <link xlink:href="WindowsNumerics">Windows.Foundation.Numerics</link> types to and from the
        <externalLink>
          <linkUri>http://msdn.microsoft.com/en-us/library/windows/desktop/hh437833</linkUri>
          <linkText>DirectXMath</linkText>
        </externalLink>
        SIMD types
        <externalLink>
          <linkUri>http://msdn.microsoft.com/en-us/library/windows/desktop/ee420742</linkUri>
          <linkText>XMVECTOR</linkText>
        </externalLink>
        and
        <externalLink>
          <linkUri>http://msdn.microsoft.com/en-us/library/windows/desktop/microsoft.directx_sdk.reference.xmmatrix</linkUri>
          <linkText>XMMATRIX</linkText>
        </externalLink>.
      </para>
      <para>
        <markup><br/></markup>
        <legacyBold>Namespace:</legacyBold> DirectX
        <markup><br/></markup>
        <legacyBold>Header:</legacyBold> WindowsNumerics.h
      </para>
    </introduction>
    
    <section>
      <title>Functions</title>
      <content>
        <table>
          <tableHeader>
            <row>
              <entry>Name</entry>
              <entry>Description</entry>
            </row>
          </tableHeader>
          <row>
            <entry><codeInline>XMVECTOR XMLoadFloat2(_In_ float2 const* pSource)</codeInline></entry>
            <entry>Loads a float2 into a DirectXMath XMVECTOR.</entry>
          </row>
          <row>
            <entry><codeInline>XMVECTOR XMLoadFloat3(_In_ float3 const* pSource)</codeInline></entry>
            <entry>Loads a float3 into a DirectXMath XMVECTOR.</entry>
          </row>
          <row>
            <entry><codeInline>XMVECTOR XMLoadFloat4(_In_ float4 const* pSource)</codeInline></entry>
            <entry>Loads a float4 into a DirectXMath XMVECTOR.</entry>
          </row>
          <row>
            <entry><codeInline>XMMATRIX XMLoadFloat3x2(_In_ float3x2 const* pSource)</codeInline></entry>
            <entry>Loads a float3x2 into a DirectXMath XMMATRIX.</entry>
          </row>
          <row>
            <entry><codeInline>XMMATRIX XMLoadFloat4x4(_In_ float4x4 const* pSource)</codeInline></entry>
            <entry>Loads a float4x4 into a DirectXMath XMMATRIX.</entry>
          </row>
          <row>
            <entry><codeInline>XMVECTOR XMLoadPlane(_In_ plane const* pSource)</codeInline></entry>
            <entry>Loads a plane into a DirectXMath XMVECTOR.</entry>
          </row>
          <row>
            <entry><codeInline>XMVECTOR XMLoadQuaternion(_In_ quaternion const* pSource)</codeInline></entry>
            <entry>Loads a quaternion into a DirectXMath XMVECTOR.</entry>
          </row>
          <row>
            <entry><codeInline>void XMStoreFloat2(_Out_ float2* pDestination, _In_ FXMVECTOR value)</codeInline></entry>
            <entry>Stores a DirectXMath XMVECTOR into a float2.</entry>
          </row>
          <row>
            <entry><codeInline>void XMStoreFloat3(_Out_ float3* pDestination, _In_ FXMVECTOR value)</codeInline></entry>
            <entry>Stores a DirectXMath XMVECTOR into a float3.</entry>
          </row>
          <row>
            <entry><codeInline>void XMStoreFloat4(_Out_ float4* pDestination, _In_ FXMVECTOR value)</codeInline></entry>
            <entry>Stores a DirectXMath XMVECTOR into a float4.</entry>
          </row>
          <row>
            <entry><codeInline>void XMStoreFloat3x2(_Out_ float3x2* pDestination, _In_ FXMMATRIX value)</codeInline></entry>
            <entry>Stores a DirectXMath XMMATRIX into a float3x2.</entry>
          </row>
          <row>
            <entry><codeInline>void XMStoreFloat4x4(_Out_ float4x4* pDestination, _In_ FXMMATRIX value)</codeInline></entry>
            <entry>Stores a DirectXMath XMMATRIX into a float4x4.</entry>
          </row>
          <row>
            <entry><codeInline>void XMStorePlane(_Out_ plane* pDestination, _In_ FXMVECTOR value)</codeInline></entry>
            <entry>Stores a DirectXMath XMVECTOR into a plane.</entry>
          </row>
          <row>
            <entry><codeInline>void XMStoreQuaternion(_Out_ quaternion* pDestination, _In_ FXMVECTOR value)</codeInline></entry>
            <entry>Stores a DirectXMath XMVECTOR into a quaternion.</entry>
          </row>
        </table>
      </content>
    </section>

  </developerConceptualDocument>
</topic>
