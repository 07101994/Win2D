<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Microsoft.Graphics.Canvas.Numerics</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.Vector2">
      <summary>A vector with two components.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single,System.Single)">
      <summary>Creates a new instance of Vector2.</summary>
      <param name="x">Initial value for the x component of the vector.</param>
      <param name="y">Initial value for the y component of the vector.</param>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single)">
      <summary>Creates a new instance of Vector2.</summary>
      <param name="value">Value to initialize each component to.</param>
    </member>
    <member name="M:System.Numerics.Vector2.Length">
      <summary>Calculates the length, or Euclidean distance, of the vector.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.LengthSquared">
      <summary>Calculates the length, or Euclidean distance, of the vector squared.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Distance(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Calculates the Euclidean distance between two vectors.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Calculates the Euclidean distance between two vectors squared.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Dot(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Calculates the dot product of two vectors.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Normalize(System.Numerics.Vector2)">
      <summary>Creates a unit vector from the specified vector.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Min(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Returns a vector that contains the lowest value from each matching pair of components.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Max(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Returns a vector that contains the highest value from each matching pair of components.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Restricts a value to be within a specified range.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
      <summary>Performs a linear interpolation between two vectors.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Reflect(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Determines the reflect vector of the given vector and normal.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary>Transforms the vector (x, y, 0, 1) by the specified matrix.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary>Transforms the vector (x, y, 0, 1) by the specified matrix.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary>Transforms the normal vector (x, y, 0, 0) by the specified matrix.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary>Transforms the normal vector (x, y, 0, 0) by the specified matrix.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary>Transforms a Vector2 by the given quaternion.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Negate(System.Numerics.Vector2)">
      <summary>Returns a vector pointing in the opposite direction.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Add(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Adds two vectors.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Subtract(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Subtracts a vector from a vector.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Multiplies the components of two vectors by each other.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Single)">
      <summary>Multiplies a vector by a scalar.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Divides the components of a vector by the components of another vector.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Single)">
      <summary>Divides a vector by a scalar value.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.op_UnaryNegation(System.Numerics.Vector2)">
      <summary>Returns a vector pointing in the opposite direction.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Adds two vectors.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Subtracts a vector from a vector.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Multiplies the components of two vectors by each other.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Single)">
      <summary>Multiplies a vector by a scalar.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Single,System.Numerics.Vector2)">
      <summary>Multiplies a vector by a scalar.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Divides the components of a vector by the components of another vector.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Single)">
      <summary>Divides a vector by a scalar value.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Determines whether two instances of Vector2 are equal.</summary>
      <remarks>Uses an exact floating point equality comparison, which is not advised if the values being compared are the result of computations which could have introduced floating point precision errors.
               In such cases, comparing DistanceSquared against a very small tolerance threshold may be a better approach.</remarks>
    </member>
    <member name="M:System.Numerics.Vector2.op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>Determines whether two instances of Vector2 are not equal.</summary>
      <remarks>Uses an exact floating point equality comparison, which is not advised if the values being compared are the result of computations which could have introduced floating point precision errors.
               In such cases, comparing DistanceSquared against a very small tolerance threshold may be a better approach.</remarks>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Numerics.Vector2)">
      <summary>Determines whether the specified Vector2 is equal to the Vector2.</summary>
      <remarks>Uses an exact floating point equality comparison, which is not advised if the values being compared are the result of computations which could have introduced floating point precision errors.
               In such cases, comparing DistanceSquared against a very small tolerance threshold may be a better approach.</remarks>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Object)">
      <summary>Determines whether the specified Object is equal to the Vector2.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.ToString">
      <summary>Returns a String that represents the current Vector2.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.GetHashCode">
      <summary>Gets the hash code for this object.</summary>
    </member>
    <member name="M:System.Numerics.Vector2.op_Implicit(System.Numerics.Vector2)~Microsoft.Graphics.Canvas.Numerics.Vector2">
      <summary>Converts a System.Numerics.Vector2 to a Microsoft.Graphics.Canvas.Numerics.Vector2.</summary>
      <remarks>This allows application code to use the rich System.Numerics math types, then pass these objects directly to WinRT APIs that use the WinRT structs from Microsoft.Graphics.Canvas.Numerics.</remarks>
    </member>
    <member name="M:System.Numerics.Vector2.op_Implicit(Microsoft.Graphics.Canvas.Numerics.Vector2)~System.Numerics.Vector2">
      <summary>Converts a Microsoft.Graphics.Canvas.Numerics.Vector2 to a System.Numerics.Vector2.</summary>
      <remarks>This allows application code to use the rich System.Numerics math types, and assign to these objects directly from the return values of WinRT APIs that use the WinRT structs from Microsoft.Graphics.Canvas.Numerics.</remarks>
    </member>
    <member name="F:System.Numerics.Vector2.X">
      <summary>X component of the vector.</summary>
    </member>
    <member name="F:System.Numerics.Vector2.Y">
      <summary>Y component of the vector.</summary>
    </member>
    <member name="P:System.Numerics.Vector2.Zero">
      <summary>Returns a Vector2 with all of its components set to zero.</summary>
    </member>
    <member name="P:System.Numerics.Vector2.One">
      <summary>Returns a Vector2 with all of its components set to one.</summary>
    </member>
    <member name="P:System.Numerics.Vector2.UnitX">
      <summary>Returns the Vector2 (1, 0).</summary>
    </member>
    <member name="P:System.Numerics.Vector2.UnitY">
      <summary>Returns the Vector2 (0, 1).</summary>
    </member>
  </members>
</doc>
