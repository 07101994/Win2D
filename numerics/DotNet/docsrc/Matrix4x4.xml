<?xml version="1.0"?>
<!--
Copyright (c) Microsoft Corporation. All rights reserved.

Licensed under the MIT License. See LICENSE.txt in the project root for license information.
-->

<doc>
  <assembly>
    <name>Microsoft.Graphics.Canvas.Numerics</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.Matrix4x4">
      <summary>
        <p>A 4x4 matrix, used for 3D transforms.</p>
        <p intellisense="false">This type is only available in .NET. Its C++ equivalent is <a href="WindowsNumerics_float4x4.htm">float4x4</a>.</p>
      </summary>
      <remarks>This matrix type uses a row vector layout. Matrices can be either row vector or column vector. Row vector matrices view vectors as a row from left to right, while column vector matrices view vectors as a column from top to bottom. For example, the x, y, and z of this matrix's translation vector correspond to the fields M41, M42, M43.</remarks>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Initializes a new instance of Matrix4x4.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Numerics.Matrix3x2)">
      <summary>Initializes a Matrix4x4 from a Matrix3x2.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>Creates a spherical billboard that rotates around a specified object position, using a right handed coordinate system.</summary>
      <remarks>This method computes the facing direction of the billboard from the object position and camera position. When the object and camera positions are too close, the matrix will not be accurate. To avoid this problem, the method uses the camera forward vector if the positions are too close.</remarks>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateConstrainedBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>Creates a cylindrical billboard that rotates around a specified axis, using a right handed coordinate system.</summary>
      <remarks>This method computes the facing direction of the billboard from the object position and camera position. When the object and camera positions are too close, the matrix will not be accurate. To avoid this problem, the method uses the camera forward vector if the positions are too close.</remarks>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Numerics.Vector3)">
      <summary>Creates a translation matrix.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Single,System.Single,System.Single)">
      <summary>Creates a translation matrix.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single)">
      <summary>Creates a scaling matrix, centered on the origin.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single,System.Numerics.Vector3)">
      <summary>Creates a scaling matrix, centered on the specified point.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3)">
      <summary>Creates a scaling matrix, centered on the origin.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>Creates a scaling matrix, centered on the specified point.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single)">
      <summary>Creates a scaling matrix, centered on the origin.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Numerics.Vector3)">
      <summary>Creates a scaling matrix, centered on the specified point.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single)">
      <summary>Creates an x-axis rotation matrix, centered on the origin.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single,System.Numerics.Vector3)">
      <summary>Creates an x-axis rotation matrix, centered on the specified point.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single)">
      <summary>Creates a y-axis rotation matrix, centered on the origin.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single,System.Numerics.Vector3)">
      <summary>Creates a y-axis rotation matrix, centered on the specified point.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single)">
      <summary>Creates a z-axis rotation matrix, centered on the origin.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single,System.Numerics.Vector3)">
      <summary>Creates a z-axis rotation matrix, centered on the specified point.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary>Creates a matrix that rotates around an arbitrary vector.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates a perspective projection matrix based on a field of view, using a right handed coordinate system.</summary>
      <remarks>Projection space refers to the space after applying projection transformation from view space. After the projection transformation, visible content has x- and y-coordinates ranging from -1 to 1, and a z-coordinate ranging from 0 to 1.</remarks>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates a perspective projection matrix, using a right handed coordinate system.</summary>
      <remarks>Projection space refers to the space after applying projection transformation from view space. After the projection transformation, visible content has x- and y-coordinates ranging from -1 to 1, and a z-coordinate ranging from 0 to 1.</remarks>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates a customized perspective projection matrix, using a right handed coordinate system.</summary>
      <remarks>Projection space refers to the space after applying projection transformation from view space. After the projection transformation, visible content has x and y-coordinates ranging from -1 to 1, and a z-coordinate ranging from 0 to 1.</remarks>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates an orthographic projection matrix, using a right handed coordinate system.</summary>
      <remarks>
        <p>Projection space refers to the space after applying projection transformation from view space. After the projection transformation, visible content has x and y coordinates ranging from -1 to 1, and z coordinates ranging from 0 to 1.</p>
        <p>Unlike perspective projection, in orthographic projection there is no perspective foreshortening.</p>
        <p>The viewable area of this orthographic projection is centered on 0,0,0. The x-axis of the area ranges from -width/2 to width/2. The y-axis of the area ranges from -height/2 to height/2. The z-axis of the area ranges from zNearPlane to zFarPlane. These values are relative to the position and x, y, and z-axes of the view.</p>
      </remarks>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates a customized orthographic projection matrix, using a right handed coordinate system.</summary>
      <remarks>
        <p>Projection space refers to the space after applying projection transformation from view space. After the projection transformation, visible content has x and y coordinates ranging from -1 to 1, and z coordinates ranging from 0 to 1.</p>
        <p>Unlike perspective projection, in orthographic projection there is no perspective foreshortening.</p>
        <p>The viewable area of this orthographic projection extends from left to right on the x-axis, bottom to top on the y-axis, and zNearPlane to zFarPlane on the z-axis. These values are relative to the position and x, y, and z-axes of the view.</p>
      </remarks>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateLookAt(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>Creates a view matrix, using a right handed coordinate system.</summary>
      <remarks>View space, sometimes called camera space, is similar to world space in that it is typically used for the entire scene. However, in view space, the origin is at the viewer or camera.</remarks>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateWorld(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>Creates a world matrix, using a right handed coordinate system.</summary>
      <remarks>This can be used to position objects in 3D space. The matrix includes rotation and translation, but not scaling.</remarks>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromQuaternion(System.Numerics.Quaternion)">
      <summary>Creates a rotation matrix from a quaternion.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary>Creates a rotation matrix from a specified yaw, pitch, and roll.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateShadow(System.Numerics.Vector3,System.Numerics.Plane)">
      <summary>Creates a matrix that flattens geometry into a specified Plane as if casting a shadow from a specified light source.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateReflection(System.Numerics.Plane)">
      <summary>Creates a matrix that reflects the coordinate system about a specified Plane.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetDeterminant">
      <summary>Calculates the determinant of the matrix.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Invert(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4@)">
      <summary>Calculates the inverse of a matrix.</summary>
      <param name="matrix">The matrix to be inverted.</param>
      <param name="result">Outputs the inverted matrix.</param>
      <returns>true if the matrix can be inverted; false otherwise.</returns>
      <remarks>
        <p>The inverse of a matrix is a transform which has the opposite effect of the original matrix.</p>
        <p>If y = x * matrix, then y * Invert(matrix) == x.</p>
        <p>Multiplying a matrix by its inverse returns the identity matrix.</p>
      </remarks>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Decompose(System.Numerics.Matrix4x4,System.Numerics.Vector3@,System.Numerics.Quaternion@,System.Numerics.Vector3@)">
      <summary>Extracts the scalar, translation, and rotation components from a 3D scale/rotate/translate (SRT) matrix.</summary>
      <param name="matrix">The matrix to be decomposed.</param>
      <param name="scale">Outputs the scalar component of the transform matrix, expressed as a Vector3.</param>
      <param name="rotation"> Outputs the rotation component of the transform matrix, expressed as a Quaternion.</param>
      <param name="translation">Outputs the translation component of the transform matrix, expressed as a Vector3.</param>
      <returns>true if the matrix can be decomposed; false otherwise.</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transform(System.Numerics.Matrix4x4,System.Numerics.Quaternion)">
      <summary>Transforms a matrix by applying a quaternion rotation.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transpose(System.Numerics.Matrix4x4)">
      <summary>Transposes the components of a matrix along its diagonal.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Lerp(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4,System.Single)">
      <summary>Linearly interpolates between the corresponding values of two matrices.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Negate(System.Numerics.Matrix4x4)">
      <summary>Negates each component of a matrix.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Add(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>Adds each component of a matrix to another matrix.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Subtract(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>Subtracts each component of a matrix from another matrix.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>Multiplies a matrix by another matrix. This has the effect of concatenating two transforms.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary>Multiplies each component of a matrix by a scalar value</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_UnaryNegation(System.Numerics.Matrix4x4)">
      <summary>Negates each component of a matrix.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Addition(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>Adds each component of a matrix to another matrix.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Subtraction(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>Subtracts each component of a matrix from another matrix.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>Multiplies a matrix by another matrix. This has the effect of concatenating two transforms.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary>Multiplies each component of a matrix by a scalar value.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Equality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>Determines whether two instances of Matrix4x4 are equal.</summary>
      <remarks>Uses an exact floating point equality comparison, which is not advised if the values being compared are the result of computations which could have introduced floating point precision errors.</remarks>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Inequality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>Determines whether two instances of Matrix4x4 are not equal.</summary>
      <remarks>Uses an exact floating point equality comparison, which is not advised if the values being compared are the result of computations which could have introduced floating point precision errors.</remarks>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Numerics.Matrix4x4)">
      <summary>Determines whether the specified Matrix4x4 is equal to the Matrix4x4.</summary>
      <remarks>Uses an exact floating point equality comparison, which is not advised if the values being compared are the result of computations which could have introduced floating point precision errors.</remarks>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Object)">
      <summary>Determines whether the specified Object is equal to the Matrix4x4.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.ToString">
      <summary>Returns a String that represents the current Matrix4x4.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetHashCode">
      <summary>Gets the hash code for this object.</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Implicit(System.Numerics.Matrix4x4)~Microsoft.Graphics.Canvas.Numerics.Matrix4x4">
      <summary>Converts a System.Numerics.Matrix4x4 to a Microsoft.Graphics.Canvas.Numerics.Matrix4x4.</summary>
      <remarks>This allows application code to use the rich System.Numerics math types, then pass these objects directly to WinRT APIs that use the WinRT structs from Microsoft.Graphics.Canvas.Numerics.</remarks>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Implicit(Microsoft.Graphics.Canvas.Numerics.Matrix4x4)~System.Numerics.Matrix4x4">
      <summary>Converts a Microsoft.Graphics.Canvas.Numerics.Matrix4x4 to a System.Numerics.Matrix4x4.</summary>
      <remarks>This allows application code to use the rich System.Numerics math types, and assign to these objects directly from the return values of WinRT APIs that use the WinRT structs from Microsoft.Graphics.Canvas.Numerics.</remarks>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M11">
      <summary>Value at row 1 column 1 of the matrix.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M12">
      <summary>Value at row 1 column 2 of the matrix.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M13">
      <summary>Value at row 1 column 3 of the matrix.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M14">
      <summary>Value at row 1 column 4 of the matrix.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M21">
      <summary>Value at row 2 column 1 of the matrix.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M22">
      <summary>Value at row 2 column 2 of the matrix.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M23">
      <summary>Value at row 2 column 3 of the matrix.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M24">
      <summary>Value at row 2 column 4 of the matrix.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M31">
      <summary>Value at row 3 column 1 of the matrix.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M32">
      <summary>Value at row 3 column 2 of the matrix.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M33">
      <summary>Value at row 3 column 3 of the matrix.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M34">
      <summary>Value at row 3 column 4 of the matrix.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M41">
      <summary>Value at row 4 column 1 of the matrix.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M42">
      <summary>Value at row 4 column 2 of the matrix.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M43">
      <summary>Value at row 4 column 3 of the matrix.</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M44">
      <summary>Value at row 4 column 4 of the matrix.</summary>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Identity">
      <summary>Returns an instance of the identity matrix.</summary>
      <remarks>Except for the main diagonal, whose elements are all ones, the identity matrix is composed of zeros. Multiplying another matrix or transforming a vector by the identity matrix is a no-op, returning the other matrix or vector unchanged.</remarks>
    </member>
    <member name="P:System.Numerics.Matrix4x4.IsIdentity">
      <summary>Checks whether this is an identity matrix.</summary>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Translation">
      <summary>Gets or sets the translation vector of the matrix.</summary>
    </member>
  </members>
</doc>
